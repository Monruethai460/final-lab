#include <Arduino.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define DT 4
#define SCK 5
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

long offset = 16.00;
float scaleFactor = 40.0 / 16777216.0;

const int IN1 = 7;  // ควบคุมโซลินอยด์
const int IN2 = 8;
const int ENA = 9;  // ควบคุมมอเตอร์
const int IN = 13;
const int SWITCH_PIN = 6;  // ปุ่มกดเริ่มทำงาน

// ตัวแปรสถานะ
unsigned long pressureReachedTime = 0;
bool isHoldingPressure = false;  // กำลังค้างแรงดันอยู่หรือไม่
bool isReleasingAir = false;     // กำลังปล่อยลมออกหรือไม่

long readHX710() {
    long count = 0;
    pinMode(DT, INPUT);
    for (int i = 0; i < 24; i++) {
        digitalWrite(SCK, HIGH);
        delayMicroseconds(1);
        count = count << 1;
        digitalWrite(SCK, LOW);
        if (digitalRead(DT)) count++;
    }
    digitalWrite(SCK, HIGH);
    delayMicroseconds(1);
    digitalWrite(SCK, LOW);
    return count;
}

void setup() {
    Serial.begin(9600);
    
    if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
        Serial.println(F("SSD1306 allocation failed"));
        while (true);
    }
    display.clearDisplay();
    display.setTextColor(SSD1306_WHITE);
    display.display();

    pinMode(SCK, OUTPUT);
    pinMode(IN1, OUTPUT);
    pinMode(IN2, OUTPUT);
    pinMode(IN, OUTPUT);
    pinMode(ENA, OUTPUT);
    pinMode(SWITCH_PIN, INPUT);
}

void controlSolenoid(bool state) {
    digitalWrite(IN1, state ? HIGH : LOW);
    digitalWrite(IN2, LOW);
}

void controlMotor(int speed) {
    analogWrite(ENA, speed);
}

void loop() {
    long rawValue = readHX710();
    float pressure = ((rawValue * 1/80000) - offset);

    int switchState = digitalRead(SWITCH_PIN);

    // เริ่มต้นเมื่อกดปุ่ม
    if (switchState == HIGH) {
        controlSolenoid(true);  
        controlMotor(150);  
        digitalWrite(IN, HIGH);    
    }

    // เมื่อความดันถึง 60 mmHg หรืออยู่ในช่วง 60-65 mmHg
    if (!isHoldingPressure && pressure >= 60 && pressure <= 65) {  
        controlSolenoid(false);  // ปิดโซลินอยด์ทันทีเพื่อรักษาแรงดัน
        controlMotor(100);  // ลดความเร็วมอเตอร์ให้อยู่ที่ 100 (รักษาความดัน)
        digitalWrite(IN, HIGH);  
        isHoldingPressure = true;
        pressureReachedTime = millis();  // เริ่มจับเวลา
    }

    // ค้างที่ 60 mmHg เป็นเวลา 60 วินาที
    if (isHoldingPressure && millis() - pressureReachedTime >= 60000) {
        isHoldingPressure = false;  // หยุดรักษาแรงดัน
        isReleasingAir = true;      // เริ่มปล่อยลมออก
        controlMotor(0);  // ปิดมอเตอร์
        digitalWrite(IN, LOW);
        controlSolenoid(true);  // เปิดโซลินอยด์เพื่อปล่อยลม
    }

    // ปล่อยลมจนกว่าความดันจะลดลงถึง 0 mmHg
    if (isReleasingAir && pressure <= 0) {
        controlSolenoid(false);  // ปิดโซลินอยด์เมื่อปล่อยลมหมดแล้ว
        isReleasingAir = false;  // รีเซ็ตสถานะ
    }

    // แสดงค่าความดันบน OLED
    display.clearDisplay();
    display.setTextSize(1);
    display.setCursor(0, 10);
    display.println(F("RAW ADC: "));
    display.setCursor(0, 30);
    display.println(F("Pressure: "));

    display.setTextSize(1);
    display.setCursor(70, 10);
    display.print(rawValue);

    display.setTextSize(1);
    display.setCursor(70, 30);
    display.print(pressure);

    Serial.print("RAW ADC Value: ");
    Serial.print(rawValue);
    Serial.print(" | Pressure: ");
    Serial.print(pressure, 2);
    Serial.println(" mmHg");

    display.display();
    delay(100);
}
